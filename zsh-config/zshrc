# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

ZSH_THEME="robbyrussell"

HYPHEN_INSENSITIVE="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

plugins=(git chruby ruby ssh-agent)

# User configuration

export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:~/go/bin"

source $ZSH/oh-my-zsh.sh

RPROMPT='$(ruby_version)'
# Stop zsh from autocompleting CD operations without typing cd
unsetopt AUTO_CD

alias be="bundle exec"

# This sets the characters that zsh understands as part of a word. Essentially,
# when you hit CTRL-w to delete a word, it will eat these characters too. Most
# importantly, the dash character. So with a path with dashes in it, you can
# use CTRL-w to remove the most recent directory, even if it has dashes! Bliss.
export WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'

# Set Default Ruby, which is what RubyMine will use to determine the ruby and gem path when run from Finder
if [ -f $HOME/workspace/installation/.ruby-version ]; then
  chruby $(head -1 $HOME/workspace/installation/.ruby-version)
else
  chruby 2.3.4
fi

# ZSH prompt settings
RPROMPT='%{$fg[cyan]%}$(ruby_prompt_info)%{$reset_color%}'
PROMPT='${ret_status} %{$fg[cyan]%}%d%{$reset_color%} $(git_prompt_info)'

# Fuzzy completion for history
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

#Docker machine default config
#requires ruinning docker-machine start
#eval $(docker-machine env default)

HOMEBREW_GITHUB_API_TOKEN="35e20d8c268682a33236eb50bdfacaac377719a0"

# Direnv hook
eval "$(direnv hook zsh)"

ombundle() {
  local exit_status=0
  (
    cd ~/workspace/installation/
    chruby `cat ~/workspace/installation/.ruby-version`

    # avoid dependency hell with the bosh_cli and bosh_cli_plugin_micro gems when switching between branches...
    gem list | grep bosh | cut -d' ' -f1 | xargs gem uninstall --all -I

    for gemfile in $(find ~/workspace/installation -maxdepth 4 -name "*Gemfile"); do
      echo "*** BEGIN: bundle --gemfile=${gemfile}"
      bundle --gemfile=${gemfile}
      echo "*** END    bundle --gemfile=${gemfile}"
      echo ""
      exit_status=$(($exit_status + $?))
    done
  )

  if [ $exit_status != 0 ]
  then
    return 1
  fi
}
